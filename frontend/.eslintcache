[{"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/initialStates/authInitialState.ts":"1","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/initialStates/articleInitialState.ts":"2","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/index.ts":"3","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/index.tsx":"4","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/reducers/index.ts":"5","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/reducers/authReducer.ts":"6","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/authPages/SignUp.tsx":"7","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/types/articles/dispatchTypes.ts":"8","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Get.ts":"9","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Delete.ts":"10","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Create.ts":"11","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/reducers/articleReducer.ts":"12","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/authPages/SignIn.tsx":"13","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/panelPages/Panel.tsx":"14","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/Card.tsx":"15","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/App.tsx":"16","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/panelPages/Create.tsx":"17","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/index.ts":"18","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/auth/SignIn.ts":"19","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/Navbar.tsx":"20","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Clean.ts":"21","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/auth/LogOut.ts":"22","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/CreateForm.tsx":"23","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/Modal.tsx":"24","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Patch.ts":"25"},{"size":178,"mtime":1606759556854,"results":"26","hashOfConfig":"27"},{"size":152,"mtime":1606767887969,"results":"28","hashOfConfig":"27"},{"size":343,"mtime":1606769660245,"results":"29","hashOfConfig":"27"},{"size":208,"mtime":1606757611770,"results":"30","hashOfConfig":"27"},{"size":249,"mtime":1606768450787,"results":"31","hashOfConfig":"27"},{"size":652,"mtime":1606756086525,"results":"32","hashOfConfig":"27"},{"size":2532,"mtime":1606774727923,"results":"33","hashOfConfig":"27"},{"size":853,"mtime":1606768299289,"results":"34","hashOfConfig":"27"},{"size":844,"mtime":1606769041900,"results":"35","hashOfConfig":"27"},{"size":860,"mtime":1606772180776,"results":"36","hashOfConfig":"27"},{"size":974,"mtime":1606770597527,"results":"37","hashOfConfig":"27"},{"size":1124,"mtime":1606771824323,"results":"38","hashOfConfig":"27"},{"size":2136,"mtime":1606774716377,"results":"39","hashOfConfig":"27"},{"size":156,"mtime":1606771473039,"results":"40","hashOfConfig":"27"},{"size":2350,"mtime":1606775960641,"results":"41","hashOfConfig":"27"},{"size":639,"mtime":1606773103780,"results":"42","hashOfConfig":"27"},{"size":170,"mtime":1606770397485,"results":"43","hashOfConfig":"27"},{"size":139,"mtime":1606776478178,"results":"44","hashOfConfig":"27"},{"size":736,"mtime":1606772565824,"results":"45","hashOfConfig":"27"},{"size":5379,"mtime":1606774544361,"results":"46","hashOfConfig":"27"},{"size":419,"mtime":1606773900189,"results":"47","hashOfConfig":"27"},{"size":349,"mtime":1606773940406,"results":"48","hashOfConfig":"27"},{"size":2440,"mtime":1606774934951,"results":"49","hashOfConfig":"27"},{"size":2984,"mtime":1606776666102,"results":"50","hashOfConfig":"27"},{"size":1155,"mtime":1606776251506,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"i39bbq",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/initialStates/authInitialState.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/initialStates/articleInitialState.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/index.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/index.tsx",[],["107","108"],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/reducers/index.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/reducers/authReducer.ts",[],["109","110"],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/authPages/SignUp.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/types/articles/dispatchTypes.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Get.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Delete.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Create.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/reducers/articleReducer.ts",[],["111","112"],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/authPages/SignIn.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/panelPages/Panel.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/Card.tsx",["113"],"import { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n    Card, CardText, CardBody,\n    CardTitle, CardSubtitle, \n    Button, Container, Row, Col\n} from 'reactstrap';\n\nimport ModalComponent from './Modal'\nimport GetAction from '../store/actions/articles/Get'\nimport DeleteAction from '../store/actions/articles/Delete'\nimport { StoreTypes } from '../store/types/storeTypes';\n\nconst CardComponent = () => {\n    const dispatch = useDispatch()\n    const stateArticles = useSelector((state: StoreTypes) => state.articles)\n    const fetchAPI = () => {\n        dispatch(GetAction())\n    }\n    const handleDelete = (id: number) => {\n        dispatch(DeleteAction(id))\n    }\n    const mapList = stateArticles.map(article => {\n        return (\n            <Col className=\"py-2 px-2\" key={article.id} xs=\"12\" sm=\"6\" md=\"4\" lg=\"3\">\n                <Card>\n                    <CardBody>\n                        <CardTitle tag=\"h5\">{article.title}</CardTitle>\n                        <CardText>{article.content}</CardText>\n                        <CardText>\n                            <small>{article.date}</small>\n                        </CardText>\n                        <Button\n                            className=\"mr-2\"\n                            onClick={() => handleDelete(article.id)}\n                            color=\"warning\">Delete</Button>\n                        <ModalComponent article={article} />\n                    </CardBody>\n                </Card>\n            </Col>\n        )\n    })\n    let showCard\n    if (stateArticles.length >= 1) {\n        showCard = mapList\n    } else {\n        showCard = (\n            <Card>\n                <CardBody>\n                    <CardTitle tag=\"h5\">You have no articles.</CardTitle>\n                    <CardSubtitle className=\"text-center\">Create a new article.</CardSubtitle>\n                    <Button color=\"link\">\n                        <Link to=\"/create\">Move to Create Page</Link>\n                    </Button>\n                </CardBody>\n            </Card>\n        )\n    }\n    useEffect(() => fetchAPI(), [])\n    return (\n        <Container>\n            <Row className=\"py-5 justify-content-center\">\n                {showCard}\n            </Row>\n        </Container>\n    )\n}\n\nexport default CardComponent\n","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/App.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/pages/panelPages/Create.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/index.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/auth/SignIn.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/Navbar.tsx",["114"],"import { useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { DiTypo3 } from 'react-icons/di'\nimport {\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem,\n    Badge\n} from 'reactstrap';\n\nimport LogOutAction from '../store/actions/auth/LogOut'\nimport CleanAction from '../store/actions/articles/Clean'\nimport { StoreTypes } from '../store/types/storeTypes';\nimport { ButtonEvent } from '../@types/eventTypes';\n\nconst NavbarComponent = () => {\n    const linkStyles = {\n        textDecoration: 'none',\n        color: 'black',\n    }\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [isOpen, setIsOpen] = useState(false);\n    const toggle = () => setIsOpen(!isOpen);\n    const stateToken = useSelector((state: StoreTypes) => state.auth.token)\n    const stateUsername = useSelector((state: StoreTypes) => state.auth.username)\n    const handleLogOut = (e: ButtonEvent) => {\n        e.preventDefault()\n        if (stateToken !== '') {\n            dispatch(LogOutAction())\n            dispatch(CleanAction())\n            history.push('/sign-in')\n        }\n    }\n    let isLoggedIn\n    if (stateToken === '') {\n        isLoggedIn = (\n            <>\n                <NavItem>\n                    <NavLink>\n                        <Link\n                            style={{\n                                textDecoration: linkStyles.textDecoration,\n                                color: linkStyles.color\n                            }}\n                            to=\"/\"\n                        >\n                            Sign up\n                    </Link>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink>\n                        <Link\n                            style={{\n                                textDecoration: linkStyles.textDecoration,\n                                color: linkStyles.color\n                            }}\n                            to=\"/sign-in\"\n                        >\n                            Sign in\n                    </Link>\n                    </NavLink>\n                </NavItem>\n            </>\n        )\n    } else {\n        isLoggedIn = (\n            <>\n                <NavItem>\n                    <NavLink>\n                        <Link\n                            style={{\n                                textDecoration: linkStyles.textDecoration,\n                                color: linkStyles.color\n                            }}\n                            to=\"/panel\"\n                        >\n                            Articles\n                    </Link>\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink>\n                        <Link\n                            style={{\n                                textDecoration: linkStyles.textDecoration,\n                                color: linkStyles.color\n                            }}\n                            to=\"/create\"\n                        >\n                            Add article\n                    </Link>\n                    </NavLink>\n                </NavItem>\n                <UncontrolledDropdown nav inNavbar>\n                    <DropdownToggle nav caret>\n                        <span\n                            style={{\n                                textDecoration: linkStyles.textDecoration,\n                                color: linkStyles.color\n                            }}\n                        >Account</span>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem>\n                            Hello {stateUsername}!\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem onClick={handleLogOut}>\n                            Log out\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledDropdown>\n            </>\n        )\n    }\n    let showNavBrand\n    if (stateToken === '') {\n        showNavBrand = (\n            <Link\n                style={{\n                    textDecoration: linkStyles.textDecoration,\n                    color: linkStyles.color\n                }}\n                to=\"/\"\n            >\n                <DiTypo3 />\n            </Link>\n        )\n    } else {\n        showNavBrand = (\n            <Link\n                style={{\n                    textDecoration: linkStyles.textDecoration,\n                    color: linkStyles.color\n                }}\n                to=\"/panel\"\n            >\n                <DiTypo3 />\n            </Link>\n        )\n    }\n    return (\n        <div>\n            <Navbar color=\"light\" light expand=\"md\">\n                <NavbarBrand>\n                    {showNavBrand}\n                </NavbarBrand>\n                <NavbarToggler onClick={toggle} />\n                <Collapse isOpen={isOpen} navbar>\n                    <Nav className=\"mr-auto\" navbar>\n                        {isLoggedIn}\n                    </Nav>\n                </Collapse>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default NavbarComponent\n","/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Clean.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/auth/LogOut.ts",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/CreateForm.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/components/Modal.tsx",[],"/Users/franciscomendes/Desktop/GIT/vissay/frontend/src/store/actions/articles/Patch.ts",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"115","replacedBy":"119"},{"ruleId":"117","replacedBy":"120"},{"ruleId":"115","replacedBy":"121"},{"ruleId":"117","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":60,"column":33,"nodeType":"125","endLine":60,"endColumn":35,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":17,"column":5,"nodeType":"129","messageId":"130","endLine":17,"endColumn":10},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],["131"],["132"],["131"],["132"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchAPI'. Either include it or remove the dependency array.","ArrayExpression",["133"],"@typescript-eslint/no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},"Update the dependencies array to be: [fetchAPI]",{"range":"136","text":"137"},[2150,2152],"[fetchAPI]"]